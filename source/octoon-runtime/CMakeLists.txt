SET(LIB_NAME runtime)
SET(LIB_OUTNAME octoon-${LIB_NAME})

SET(HEADER_PATH ${OCTOON_PATH_HEADER}/${LIB_NAME})
SET(SOURCE_PATH ${OCTOON_PATH_SOURCE}/${LIB_OUTNAME})

SET(CORE_LIST
	${HEADER_PATH}/def.h
	${HEADER_PATH}/algorithm.h
	${HEADER_PATH}/json.h
	${HEADER_PATH}/assert.h
	${HEADER_PATH}/platform.h
	${HEADER_PATH}/singleton.h
	${HEADER_PATH}/rtti.h
	${SOURCE_PATH}/rtti.cpp
	${HEADER_PATH}/rtti_interface.h
	${SOURCE_PATH}/rtti_interface.cpp
	${HEADER_PATH}/rtti_factory.h
	${SOURCE_PATH}/rtti_factory.cpp
	${HEADER_PATH}/rtti_macros.h
	${HEADER_PATH}/rtti_singleton.h
	${SOURCE_PATH}/rtti_singleton.cpp
	${HEADER_PATH}/timer.h
	${SOURCE_PATH}/timer.cpp
	${HEADER_PATH}/except.h
	${SOURCE_PATH}/except.cpp
	${HEADER_PATH}/string.h
	${SOURCE_PATH}/string.cpp
	${HEADER_PATH}/uuid.h
	${SOURCE_PATH}/uuid.cpp
)
SOURCE_GROUP(${LIB_NAME} FILES ${CORE_LIST})

IF(OCTOON_BUILD_SHARED_DLL)
	ADD_DEFINITIONS(-DOCTOON_BUILD_DLL_EXPORT)
	ADD_LIBRARY(${LIB_OUTNAME} SHARED ${CORE_LIST})
ELSE()
	ADD_DEFINITIONS(-DOCTOON_STATIC)
	ADD_LIBRARY(${LIB_OUTNAME} ${CORE_LIST})
ENDIF()

IF(OCTOON_BUILD_PLATFORM_ANDROID)
    TARGET_LINK_LIBRARIES (${LIB_OUTNAME} PRIVATE m)
ENDIF()

SET_TARGET_ATTRIBUTE(${LIB_OUTNAME} "core")